.kon-select {
	--font-size: 0.8rem;
	--component-background: var(--kon-surface-container);
	--component-foreground: var(--kon-on-surface);
	--current-label-color: rgba(var(--foreground-color), 1);
	--current-label-elevation-offset: 0;
	position: relative;
	padding: 8px 12px;
	padding-right: 30px;
	min-width: 200px;
	max-width: 200px;
	background: var(--component-background);
	border-radius: 12px;
	user-select: none;
	cursor: pointer;
	transition-property: border-radius, transform, background, filter, padding;
	transition-timing-function: ease;
	transition-duration: 250ms;
	font-size: var(--font-size);

	&:hover,
	&:focus,
	&:focus-within,
	&.kon-open {
		/* {13, ..., 21} */
		--component-background: var(--kon-surface);
		/* Use filter instead of box shadow since we are applying a shadow to the shole thing and we don't want overlaps */
		filter: drop-shadow(0 0 12px rgba(var(--kon-primary-rgb), 0.1));
	}

	&.kon-open {
		transform: translateY(-4px);
	}

	&.kon-open:not(.kon-fixed) {
		border-radius: 12px 12px 0px 0px;
	}

	&.kon-disabled {
		pointer-events: none;
		opacity: .6;
	}

	& .kon-placeholder,
	& .kon-value {
		/* Allow it to have a z-index */
		position: relative;
		display: flex;
		align-items: center;
		color: var(--component-foreground);
		opacity: 1;
		transition: opacity 250ms ease;
		/* Text must stay on top of the option menu to prevent getting occluded during the reveal transition */
		z-index: 2;

		&.kon-hidden {
			opacity: 0;
		}
	}

	& .kon-placeholder{
		opacity: 0.6;
	}

	.kon-filter-input {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		background: none;
		border: none;
		z-index: 3;
		padding: 8px 12px;
		color: rgb(var(--component-foreground));
	}

	&.kon-select-label-enter-active,
	&.kon-select-label-leave-active {
		transition-property: opacity;
		transition-timing-function: ease;
		transition-duration: 150ms;
	}

	&.kon-select-label-enter,
	&.kon-select-label-leave-to {
		opacity: 0;
	}

	&.kon-full-width {
		width: 100%;
		max-width: none;
	}

	&.kon-has-label {
		margin-top: 22px;
	}

	&.kon-error {
		&>.kon-select-label {
			color: rgb(var(--danger-color));
			animation: shake-label 500ms ease;
		}

		&>.kon-select-message {
			color: rgb(var(--danger-color));
			animation: shake-transform 500ms ease;
		}
	}

	&>.kon-select-label {
		--current-label-elevation-offset: calc(-100% - 8px);
		position: absolute;
		display: flex;
		align-items: center;
		left: 0;
		font-size: .8rem;
		transform: translate(8px, var(--current-label-elevation-offset));
		color: var(--current-label-color);

		&.is-placeholder {
			--current-label-elevation-offset: 0;
			transition-property: transform, color;
			transition-timing-function: ease;
			transition-duration: 250ms;
			--current-label-color: rgba(var(--foreground-color), .4);
			/* passthrough events while on placeholder mode */
			pointer-events: none;
			transform: translate(10px, var(--current-label-elevation-offset));

			&.elevated {
				pointer-events: auto;
				--current-label-elevation-offset: calc(-100% - 8px);
				transform: translate(8px, var(--current-label-elevation-offset));
				--current-label-color: rgba(var(--foreground-color), 1);
			}
		}
	}

	&>.chevron {
		display: flex;
		align-items: center;
		position: absolute;
		top: 0;
		right: 8px;
		height: 100%;
		color: rgba(var(--foreground-color), 1);
		transform: rotate(0deg);
		transition-property: transform;
		transition-duration: 250ms;
		transition-timing-function: ease;
	}

	&.open {
		&>.chevron {
			transform: rotate(180deg);
		}

		&>.kon-select-label.is-placeholder {
			pointer-events: auto;
			--current-label-elevation-offset: calc(-100% - 8px);
			transform: translate(8px, var(--current-label-elevation-offset));
			--current-label-color: rgba(var(--foreground-color), 1);
		}
	}

	&>.kon-select-message {
		position: absolute;
		padding: 0 8px;
		left: 0;
		top: calc(100% + 2px);
		font-size: .7rem;
		color: var(--current-label-color);
	}
}